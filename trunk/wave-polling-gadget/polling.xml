<Module>
	<ModulePrefs title="Polling" height="250">
		<Require feature="rpc" />
		<Require feature="dynamic-height" />
	</ModulePrefs>
	<Content type="html">
  <![CDATA[
  <script type="text/javascript" 
      src="http://pune-gtug-wave-samples.googlecode.com/svn/trunk/wave-polling-gadget/json2.js"></script>
  <script type="text/javascript"
      src="http://wave-api.appspot.com/public/wave.js"></script>
  <script type="text/javascript">
  // adding it as a prototype object enables it to be used from any array
	Array.prototype.removeItems = function(itemsToRemove) {
	
	    if (!/Array/.test(itemsToRemove.constructor)) {
	        itemsToRemove = [ itemsToRemove ];
	    }
	
	    var j;
	    for (var i = 0; i < itemsToRemove.length; i++) {
	        j = 0;
	        while (j < this.length) {
	            if (this[j] == itemsToRemove[i]) {
	                this.splice(j, 1);
	            } else {
	                j++;
	            }
	        }
	    }
	}
  </script>
  <script type="text/javascript">
    var DEBUG=true;
	var TITLE="title";
	
    function renderInfo(){
  
       try{
         if (!wave.getState()) {
           return;
         }
         setup();
         renderTitle();
         renderPollResult();
   
       }catch(e){
       	   for(var i in e){
       	     alert(i+"="+e[i]);
       	   }
       }
       gadgets.window.adjustHeight();
       
    }
    
    function renderTitle(){
         var state=wave.getState();
         if(!state.get(TITLE)) {
           text(TITLE,"Not set yet");
         }
         else {
           text(TITLE,state.get(TITLE));
         } 
    }
    function renderPollResult(){
      var state = wave.getState();
      var keys = state.getKeys();
      var pollTable = elem("pollResults");
      var contents="";
      var total = wave.getParticipants().length;
      for(var index=0;index<keys.length;index++){
          var key = keys[index];
          if(getValidOptionValue(key)!=null){
              var obj=getValidOptionValue(key);
	          var button = "";
	          
	          if( obj.participants.indexOf( wave.getViewer().getId() )>=0 ){
	            button="<button id='"+key+"' onClick='removeVote(\""+key+"\")'>-</button>";
	            
	          }
	          else{
	            button="<button id='"+key+"' onClick='addVote(\""+key+"\")'>+</button>";
	            
	          }
	          
	          var votes = obj.count;
	          var votesWidth = (100 * votes)/total ;
	          var color = null;
	          if(votesWidth>66){
	            color="green";
	          }
	          else if(votesWidth>33 && votesWidth<66){
	            color="blue";
	          }
	          else {
	            color="red";
	          }
	          var votesDiv = "<div style='width:100%;border:1px solid black'><div style='background:"+color+";height:30px;width:"+votesWidth+"%'><div style='height:30px;margin-left:30px'>Received "+votes+" votes</div></div></div>";
	          
	          contents=contents+"<tr height='30px'><td width='20%'>"+key+"</td><td width='60%' style='color:white'> "+votesDiv+"</td><td width='20%'>"+button+"</td></tr>";
          }
      }
      pollTable.innerHTML=contents;
    }  
    
    function getValidOptionValue(key){
      var state = wave.getState();
      var value = state.get(key);
      
      if(value!=null){
      
    	var validObject=true;
        var obj =null;
        try{
	      obj = JSON.parse(value);
	      if(obj.count ==null){
	        validObject=false;
	     
	      }
	    }
	    catch(e){
	      validObject=false;
	     
	    }
	    if(validObject){
	      return obj;
	    }
	    else{
	      return null;
	    }
	  }
	  else{
	    return null;
	  }
    }
    function addVote(option){
      var optionValue = getValidOptionValue(option);
      if(optionValue!=null){
         optionValue.count++;
         optionValue.participants.push(wave.getViewer().getId());
         var state = wave.getState();
	     var delta = { };
	     delta[option] = JSON.stringify(optionValue);
         wave.getState().submitDelta(delta);
      }
      gadgets.window.adjustHeight();
    
    }
    
    function removeVote(option){
      var optionValue = getValidOptionValue(option);
      if(optionValue!=null){
         optionValue.count--;
         optionValue.participants.removeItems(wave.getViewer().getId());
         var state = wave.getState();
	     var delta = { };
	     delta[option] = JSON.stringify(optionValue);
         wave.getState().submitDelta(delta);
      }
      gadgets.window.adjustHeight();
    
    }
      
    function setPollTitle(id){
      var title = value(id);
      if(title==null){
        alert("Please enter a Title for the polls?");
      }
      else{
	      var state = wave.getState();
	      var delta = {};
	      delta[TITLE]=title;
	      wave.getState().submitDelta(delta);
	  }
      gadgets.window.adjustHeight();
      
    }
    function addOption(id){
      var option = value(id);
      if(option==null){
        alert("Please enter an Option for the polls?");
      }
      else{
	      var state = wave.getState();
	      var data = {"count":0,"participants":[]};
	      var delta = { };
	      delta[option] = JSON.stringify(data);
	      wave.getState().submitDelta(delta);
	  }
      gadgets.window.adjustHeight();
    }

    function log(text){
       if(DEBUG && document.getElementById("log")!=null)
       document.getElementById("log").innerHTML=document.getElementById("log").innerHTML+"<br>"+text;
    }
    
    function show(id){
      if(document.getElementById(id)!=null)
      document.getElementById(id).style.display="block";
    }
    function hide(id){
      if(document.getElementById(id)!=null)
      document.getElementById(id).style.display="none";
    }
    function value(id){
      if(document.getElementById(id)!=null)
        return document.getElementById(id).value;
      else
        null;
    }
    function elem(id){
      if(document.getElementById(id)!=null)
        return document.getElementById(id);
      else
        null;
    }
    function text(id,text){
      if(document.getElementById(id)!=null)
        return document.getElementById(id).innerHTML=text;
      else
        null;
    }
    
    function setup(){
	  hide("owner");      
      if(wave.getViewer().getId()==wave.getHost().getId()){
         show("owner");
      }
    }

    /** 
     * Called when Gadget is loaded.
     * Registers function renderInfo which will be called
     * when ever a state is changed or a participant added
     */
    function init() {
      if (wave && wave.isInWaveContainer()) {
        wave.setStateCallback(renderInfo);
        wave.setParticipantCallback(renderInfo);
      }
    }

    gadgets.util.registerOnLoadHandler(init);
    
    
    
  </script>
  <div id="log" style="border:1px dotted red;display:none">
  </div>
  <div id="participant">
     <h1 id="title"></h1>
  </div>
  
  <div id="owner" style="display:none">
     <table>
       <tr>
         <td>Enter Polling Title :</td>
         <td><input id="titleInput" type="text" value=""></input></td>
         <td><button id="titleSubmit" name="Set" value="Set" onClick="setPollTitle('titleInput')">Set</button></td>
       </tr>
      </table>
  </div>
  <div>
     <table>
       <tr>
         <td>Add Option:</td>
         <td><input id="addOptionInput" type="text" value=""></input></td>
         <td><button id="addOptionSubmit" name="addOption" value="addOption" onClick="addOption('addOptionInput')">Set</button></td>
       </tr>
      </table>
  </div>
  <div>
    <h2>Poll Results</h2>
    <table id="pollResults" width="100%">
      
    </table>
  </div>
  <hr>
  <div style="height:100px" cellspacing="5">
  	<table>
  	  <tr>
  	  <td>
      <image src="http://pune-gtug-wave-samples.googlecode.com/svn/trunk/wave-polling-gadget/cerebrum-software-logo.gif"></image>
      </td>
      <td>
      This Wave Gadget is presented by <a href="http://www.cerebrumsoftware.in">Cerebrum Software Labs</a>.     
      For futher enquiry please contact <a href="mailto:info@cerebrumsoftware.in">info@cerebrumsoftware.in</a>.
      <br>
      Author: <a href="mailto:rohit@cerebrumsoftware.in">rohit@cerebrumsoftware.in</a>
      </td>
      </tr>
    </table>
       
  </div>
]]>
	</Content>
</Module>
