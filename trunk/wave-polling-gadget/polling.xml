<Module>
	<ModulePrefs title="Polling" height="250">
		<Require feature="rpc" />
		<Require feature="dynamic-height" />
	</ModulePrefs>
	<Content type="html">
  <![CDATA[
  <script type="text/javascript"
      src="http://wave-api.appspot.com/public/wave.js"></script>
  <script type="text/javascript">
    var DEBUG=true;
	var TITLE="title";
	
    function renderInfo(){
  
       try{
         if (!wave.getState()) {
           return;
         }
         setup();
         var state=wave.getState();
         if(!state.get(TITLE)) {
           text(TITLE,"Not set yet");
         }
         else {
           text(TITLE,wave.get(TITLE));
         } 
   
       }catch(e){
       	   alert(e);
       }
       gadgets.window.adjustHeight();
    }
    
    
    function setPollTitle(title){
      //TODO Set value in state
      var state = wave.getState();
      log(state);
      state.submitDelta({TITLE:title});
      
    }
    function addOption(option){
      //TODO add Option on behalf of the viewer
    }

    function log(text){
       if(DEBUG && document.getElementById("log")!=null)
       document.getElementById("log").innerHTML=document.getElementById("log").innerHTML+"<br>"+text;
    }
    function show(id){
      if(document.getElementById(id)!=null)
      document.getElementById(id).style.display="block";
    }
    function hide(id){
      if(document.getElementById(id)!=null)
      document.getElementById(id).style.display="none";
    }
    function value(id){
      if(document.getElementById(id)!=null)
      return document.getElementById(id).value;
    }
    function text(id,text){
      if(document.getElementById(id)!=null)
      return document.getElementById(id).innerHTML=text;
    }
    
    function setup(){
	  hide("owner");      
      hide("participant");
      if(wave.getViewer().getId()==wave.getHost().getId()){
         show("owner");
      }
      else{
         show("participant");
      }
    }

    /** 
     * Called when Gadget is loaded.
     * Registers function renderInfo which will be called
     * when ever a state is changed or a participant added
     */
    function init() {
      log("started in init");
      if (wave && wave.isInWaveContainer()) {
        wave.setStateCallback(renderInfo);
        wave.setParticipantCallback(renderInfo);
      }
    }

    gadgets.util.registerOnLoadHandler(init);
    
    
    
  </script>
  <div id="log" style="border:1px dotted red">
  </div>
  <div id="owner" style="display:none">
     <table>
       <tr>
         <td>Enter Polling Title :</td>
         <td><input id="titleInput" type="text" value=""></input></td>
         <td><button id="titleSubmit" name="Set" value="Set" onClick="alert(value('titleInput');setPollTitle(value('titleInput'))">Set</button></td>
       </tr>
      </table>
  </div>
  <div id="participant" style="display:none">
     <h1 id="title"></h1>
  </div>
  <div>
     <table>
       <tr>
         <td>Add Option:</td>
         <td><input id="addOptionInput" type="text" value=""></input></td>
         <td><button id="addOptionSubmit" name="addOption" value="addOption" onClick="addOption(id('titleInput'))">Set</button></td>
       </tr>
      </table>
  </div>
  <div>
    <h2>Poll Results</h2>
    <table>
      
    </table>
  </div>
]]>
	</Content>
</Module>
